/*
 * Унивверсальная библиотека для dc-моторов, которая разработана для различных шилдов. С ее помощью можно легко
 * управлять различными типами моторшилдов (от транзисторного ключа, до l293 микросхемы) одинаковыми командами.
 * 
 * изменено 09.06.2021
 * Бакай Егор
 * https://github.com/Ni3nayka/arduino_motor
 */


#include <using_motor.h>                               // подключаем библиотеку

const int dir_1 = 7;                                   // объявляем 1-ый цифровой пин шилда
const int dir_2 = 8;                                   // объявляем 2-ой цифровой пин шилда
const int pwm = 6;                                     // объявляем ШИМ пин шилда

motor test_motor("DIR",dir_1, "DIR",dir_2, "PWM",pwm); // объявляем мотор и прописываем параметры его шилда, записывая в последовательности 
                                                       // ("режим_работы_пина",номер_этого_пина)

/*                                                       
 * Режимы работы с шилдом: (номер режима работы возвращает функция test_motor.TestMode())
motor test_motor("DIR",dir_1);                         // 1 - один цифровой
motor test_motor("DIR",dir_1, "DIR",dir_2);            // 2 - два цифровых 
motor test_motor("DIR",dir_1, "PWM",pwm);              // 3 - один цифровой и ШИМ (L298)
motor test_motor("DIR",dir_1, "DIR",dir_2, "PWM",pwm); // 4 - два цифровых и ШИМ (L293)
 * Форматы записи:
motor test_motor(DIR,dir_1, DIR,dir_2, PWM,pwm);       // "PWM" и "DIR" можно записывать без кавычек
motor test_motor("DIR",dir_2, "PWM",pwm, "DIR",dir_1); // так тоже можно (работать будет также, как и 4-ая установка, 
                                                       // последовательность ввода "PWM" и "DIR" не имеет значения)

 * Управление скоростью мотора (работает только с шилдами у которых есть "PWM"): test_motor.run(n) - управление скоростью по умолчанию 
 * производится от -100 до 100, где -100 это максимум назад, 100 максимум вперед, 0 остановка. Полученное значение 
 * масштабируется до 255 (по модулю), для управления мотором. Управляющий предел (100) можно изменить с помощью команды test_motor.SetSpeed(x),
 * тогда значения будут масштабироваться от -х до х.
 * 
 * У шилдов без "PWM":
 * test_motor.run(1); - вперед
 * test_motor.run(0); - стоп
 * test_motor.run(-1); - назад (если два DIR)
*/

void setup() {                                         // установка
  Serial.begin(9600);                                  // открытие монитора порта
  
  Serial.println(test_motor.TestMode());               // вывод режима работы шилда (выведет 0, если при вводе была ошибка)
  //test_motor.SetSpeed(10);                           // настраиваем новые предельные значения, которые будут масштабироваться в 255,
                                                       // при управлении скоростью мотора (по умолчанию 100)
  test_motor.run(100);                                 // запуск мотора со скоросью 100 (вперед)
  delay(1000);                                         // задержка 1 секунда
  test_motor.run(-50);                                 // запуск мотора со скоросью 50 (назад)
  delay(1000);                                         // задержка 1 секунда
  test_motor.run(0);                                   // остановка мотора
  //test_motor.stop();                                 // тоже самое, что и test_motor.run(0);
  //test_motor.block();                                // блокирует вращение мотора (работает только с шилдами у который 2 пина "DIR")
}

void loop () {                                         // тело основного цикла (в котором мы ничего не делаем)
  
}
